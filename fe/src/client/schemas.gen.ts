// This file is auto-generated by @hey-api/openapi-ts

export const $Blog = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        title: {
            type: 'string',
            title: 'Title'
        }
    },
    type: 'object',
    required: ['id', 'title'],
    title: 'Blog'
} as const;

export const $Comment = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        content: {
            type: 'string',
            title: 'Content'
        },
        user_id: {
            type: 'integer',
            title: 'User Id'
        }
    },
    type: 'object',
    required: ['id', 'content', 'user_id'],
    title: 'Comment'
} as const;

export const $HTTPValidationError = {
    properties: {
        detail: {
            items: {
                '$ref': '#/components/schemas/ValidationError'
            },
            type: 'array',
            title: 'Detail'
        }
    },
    type: 'object',
    title: 'HTTPValidationError'
} as const;

export const $MyBlog2 = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        title: {
            type: 'string',
            title: 'Title'
        },
        comments: {
            items: {
                '$ref': '#/components/schemas/Comment'
            },
            type: 'array',
            title: 'Comments',
            default: []
        }
    },
    type: 'object',
    required: ['id', 'title'],
    title: 'MyBlog2'
} as const;

export const $MyBlog3 = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        title: {
            type: 'string',
            title: 'Title'
        },
        comments: {
            items: {
                '$ref': '#/components/schemas/MyComment3'
            },
            type: 'array',
            title: 'Comments',
            default: []
        }
    },
    type: 'object',
    required: ['id', 'title'],
    title: 'MyBlog3'
} as const;

export const $MyBlogSite1 = {
    properties: {
        name: {
            type: 'string',
            title: 'Name'
        },
        blogs: {
            items: {
                '$ref': '#/components/schemas/Blog'
            },
            type: 'array',
            title: 'Blogs',
            default: []
        }
    },
    type: 'object',
    required: ['name'],
    title: 'MyBlogSite1'
} as const;

export const $MyBlogSite2 = {
    properties: {
        name: {
            type: 'string',
            title: 'Name'
        },
        blogs: {
            items: {
                '$ref': '#/components/schemas/MyBlog2'
            },
            type: 'array',
            title: 'Blogs',
            default: []
        }
    },
    type: 'object',
    required: ['name'],
    title: 'MyBlogSite2'
} as const;

export const $MyBlogSite3 = {
    properties: {
        name: {
            type: 'string',
            title: 'Name'
        },
        blogs: {
            items: {
                '$ref': '#/components/schemas/MyBlog3'
            },
            type: 'array',
            title: 'Blogs',
            default: []
        }
    },
    type: 'object',
    required: ['name'],
    title: 'MyBlogSite3'
} as const;

export const $MyComment3 = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        content: {
            type: 'string',
            title: 'Content'
        },
        user_id: {
            type: 'integer',
            title: 'User Id'
        },
        user: {
            anyOf: [
                {
                    '$ref': '#/components/schemas/User'
                },
                {
                    type: 'null'
                }
            ]
        }
    },
    type: 'object',
    required: ['id', 'content', 'user_id'],
    title: 'MyComment3'
} as const;

export const $User = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        name: {
            type: 'string',
            title: 'Name'
        }
    },
    type: 'object',
    required: ['id', 'name'],
    title: 'User'
} as const;

export const $ValidationError = {
    properties: {
        loc: {
            items: {
                anyOf: [
                    {
                        type: 'string'
                    },
                    {
                        type: 'integer'
                    }
                ]
            },
            type: 'array',
            title: 'Location'
        },
        msg: {
            type: 'string',
            title: 'Message'
        },
        type: {
            type: 'string',
            title: 'Error Type'
        }
    },
    type: 'object',
    required: ['loc', 'msg', 'type'],
    title: 'ValidationError'
} as const;